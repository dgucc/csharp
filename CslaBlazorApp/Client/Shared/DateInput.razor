@using Csla;
@inject IStringLocalizer<SharedResources> Localize

<div>
	<div class=" col-sm-6">
		<InputDate @bind-Value="SelectedDate" @bind-Value:format="MM/dd/yyyy" class="form-control" />
		<span style="font-size:x-small">@(((DateTime)Property.Value).ToString("dd MMM yyyy"))</span>
	</div>
	<div style="font-size:0.90em">
		@*<span>@(((DateTime)Property.Value).ToString("yyyy-MM-ddTHH:mm"))</span>*@
		@if (!string.IsNullOrEmpty(Property.ErrorText)) {
			<br />

			<span class="text-danger">@Localize[Property.ErrorText]</span>
		}
		@if (!string.IsNullOrEmpty(Property.WarningText)) {
			<br />
			<span class="text-warning">@Localize[Property.WarningText]</span>
		}
		@if (!string.IsNullOrEmpty(Property.InformationText)) {
			<br />

			<span class="text-info">@Localize[Property.InformationText]</span>
		}
	</div>
</div>

@code {

	[Parameter]
	public Csla.Blazor.IPropertyInfo Property { get; set; }
	[Parameter]
	public bool EmptyIsMin { get; set; } = true;
	[Parameter]
	public string FormatString { get; set; } = "yyyy-MM-ddTHH:mm";

	private Csla.SmartDate DateValue = new SmartDate(true);

	private DateTime SelectedDate {
		get {
			DateValue = new Csla.SmartDate((DateTime?)Property.Value, EmptyIsMin);
			DateValue.FormatString = FormatString;
			return DateValue.Date;

		}
		set {
			try {
				DateValue = value;
				if (DateValue.IsEmpty)
					Property.Value = null;
				else
					Property.Value = DateValue.Date;
			} catch (ArgumentException e) { /* invalid text entry, don't update value */
				Console.WriteLine("[ERROR] DateInput.razor:" + e.Message);
			}
		}
	}

}
